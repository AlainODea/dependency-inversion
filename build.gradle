apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8
if (hasProperty('targetJdkHome')) {
    def bootstrapClasspath = "'$targetJdkHome/jre/lib/rt.jar"
    def extensionDirs = "$targetJdkHome/jre/lib${File.pathSeparator}$targetJdkHome/jre/lib/ext"
    tasks.withType(AbstractCompile, { AbstractCompile ac ->
        ac.options.bootClasspath = bootstrapClasspath
        ac.options.extensionDirs = extensionDirs
    })
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    if (rootProject.hasProperty('targetJdkHome')) {
        def bootstrapClasspath = "'$targetJdkHome/jre/lib/rt.jar"
        def extensionDirs = "$targetJdkHome/jre/lib${File.pathSeparator}$targetJdkHome/jre/lib/ext"
        project.tasks.withType(AbstractCompile, { AbstractCompile ac ->
            ac.options.bootClasspath = bootstrapClasspath
            ac.options.extensionDirs = extensionDirs
        })
    }

    repositories {
        mavenCentral()
    }

    test {
        systemProperty 'java.protocol.handler.pkgs', 'com.verafin.protocol'
    }

    task zip(type: Zip, dependsOn: jar) {
        from 'src/dist'
        into('lib') {
            from(jar)
            from configurations.runtime
        }
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    configurations {
        tests
    }

    artifacts {
        tests testJar
    }
}
